<?php

namespace Database\Seeders;

use App\Modules\Activities\Models\Activity;
use Illuminate\Database\Seeder;

class ActivitySeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        // Очищаем таблицу перед заполнением
        Activity::query()->delete();

        // Создаем активности первого уровня (корневые)
        $rootActivities = [
            'Производство',
            'Услуги',
            'Торговля',
            'Строительство',
            'Транспорт',
            'Образование',
            'Здравоохранение',
            'IT и технологии',
            'Финансы',
            'Сельское хозяйство'
        ];

        $createdRootActivities = [];

        foreach ($rootActivities as $name) {
            $activity = Activity::factory()->create([
                'name' => $name,
                'parent_id' => null,
                'level' => 1
            ]);
            $createdRootActivities[] = $activity;
        }

        // Создаем активности второго уровня
        $level2Activities = [
            'Производство' => [
                'Пищевая промышленность',
                'Химическая промышленность',
                'Машиностроение',
                'Текстильная промышленность',
                'Металлургия'
            ],
            'Услуги' => [
                'Бытовые услуги',
                'Профессиональные услуги',
                'Услуги связи',
                'Гостиничные услуги',
                'Ритуальные услуги'
            ],
            'Торговля' => [
                'Розничная торговля',
                'Оптовая торговля',
                'Электронная коммерция',
                'Автомобильная торговля',
                'Торговля недвижимостью'
            ],
            'Строительство' => [
                'Жилищное строительство',
                'Промышленное строительство',
                'Дорожное строительство',
                'Мостостроение',
                'Отделочные работы'
            ],
            'Транспорт' => [
                'Грузоперевозки',
                'Пассажирские перевозки',
                'Логистика',
                'Складские услуги',
                'Курьерские услуги'
            ],
            'Образование' => [
                'Дошкольное образование',
                'Школьное образование',
                'Высшее образование',
                'Дополнительное образование',
                'Корпоративное обучение'
            ],
            'Здравоохранение' => [
                'Поликлиники',
                'Больницы',
                'Стоматология',
                'Лабораторная диагностика',
                'Фармацевтика'
            ],
            'IT и технологии' => [
                'Разработка ПО',
                'Веб-разработка',
                'Мобильные приложения',
                'Облачные сервисы',
                'Кибербезопасность'
            ],
            'Финансы' => [
                'Банковские услуги',
                'Страхование',
                'Инвестиции',
                'Лизинг',
                'Факторинг'
            ],
            'Сельское хозяйство' => [
                'Растениеводство',
                'Животноводство',
                'Птицеводство',
                'Рыбоводство',
                'Пчеловодство'
            ]
        ];

        $createdLevel2Activities = [];

        foreach ($level2Activities as $parentName => $children) {
            $parent = Activity::where('name', $parentName)->first();

            foreach ($children as $childName) {
                $activity = Activity::factory()->create([
                    'name' => $childName,
                    'parent_id' => $parent->id,
                    'level' => 2
                ]);
                $createdLevel2Activities[] = $activity;
            }
        }

        // Создаем активности третьего уровня (максимум 3 уровня)
        $level3Activities = [
            'Пищевая промышленность' => [
                'Молочная продукция',
                'Мясная продукция',
                'Хлебобулочные изделия',
                'Кондитерские изделия'
            ],
            'Химическая промышленность' => [
                'Производство удобрений',
                'Производство пластмасс',
                'Производство красок',
                'Производство моющих средств'
            ],
            'Бытовые услуги' => [
                'Ремонт бытовой техники',
                'Химчистка',
                'Парикмахерские услуги',
                'Ремонт обуви'
            ],
            'Профессиональные услуги' => [
                'Юридические услуги',
                'Бухгалтерские услуги',
                'Консалтинговые услуги',
                'Аудиторские услуги'
            ],
            'Розничная торговля' => [
                'Продуктовые магазины',
                'Одежда и обувь',
                'Электроника',
                'Спортивные товары'
            ],
            'Жилищное строительство' => [
                'Многоквартирные дома',
                'Частные дома',
                'Коттеджные поселки',
                'Таунхаусы'
            ],
            'Грузоперевозки' => [
                'Автомобильные перевозки',
                'Железнодорожные перевозки',
                'Авиаперевозки',
                'Морские перевозки'
            ],
            'Дошкольное образование' => [
                'Детские сады',
                'Центры развития',
                'Подготовка к школе',
                'Логопедические центры'
            ],
            'Поликлиники' => [
                'Терапевтические отделения',
                'Хирургические отделения',
                'Педиатрические отделения',
                'Стоматологические отделения'
            ],
            'Разработка ПО' => [
                'Корпоративные системы',
                'Веб-приложения',
                'Мобильные приложения',
                'Игровая индустрия'
            ]
        ];

        foreach ($level3Activities as $parentName => $children) {
            $parent = Activity::where('name', $parentName)->first();

            if ($parent) {
                foreach ($children as $childName) {
                    Activity::factory()->create([
                        'name' => $childName,
                        'parent_id' => $parent->id,
                        'level' => 3
                    ]);
                }
            }
        }
    }
}
